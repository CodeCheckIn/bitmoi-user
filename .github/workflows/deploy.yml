name: Gradle Package

on:
  push:
    branches:
      - main

env:
  S3_BUCKET_NAME: bitmoi
  RESOURCE_PATH: ./src/main/resources/application.yml
  CODE_DEPLOY_APPLICATION_NAME: bitmoi-user
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: bitmoi-server

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    # [0]
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    # [1] Set yaml file 
    # https://goodgid.github.io/Github-Action-Dynamic-Variable-Substitution/
    - name: Set yaml file
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ env.RESOURCE_PATH }}
      env:
        spring.r2dbc.url: ${{ secrets.MYSQL_HOST }}
        spring.r2dbc.username: ${{ secrets.MYSQL_USERNAME }}
        spring.r2dbc.password: ${{ secrets.MYSQL_PASSWORD }}
        eureka.client.service-url.defaultZone: ${{ secrets.EUREKA_DEFAULTZONE }}

    # [2]
    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: build
        
    # [3]
    - name: Make zip file
      run: zip -r ./$GITHUB_SHA.zip .
      shell: bash
      
    # [4]
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
        aws-region: ${{ secrets.AWS_REGION }} 
        
    # [5]
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip
                
    # [6]
    - name: Code Deploy
      run: | 
        aws deploy create-deployment \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
        --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
    
